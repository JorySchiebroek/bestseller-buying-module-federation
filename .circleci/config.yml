# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  check-for-changes:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Check for changes in collections-page"
          # "Since every run step is a new shell, environment variables are not shared across steps.
          # If you need an environment variable to be accessible in more than one step, export the value using BASH_ENV."
          # See: https://circleci.com/docs/set-environment-variable/#set-an-environment-variable-in-a-step
          command: |
            if [[ $(git diff --name-only HEAD^ HEAD packages/collections-page) ]]; then
              echo "Changes detected in the collections-page micro-frontend"
              echo "export COLLECTIONS_PAGE_CHANGED=true" >> $BASH_ENV
            else
              echo "No changes in collections-page micro-frontend"
              echo "export COLLECTIONS_PAGE_CHANGED=false" >> $BASH_ENV
            fi
      - run:
          name: "Check for changes in styles-page"
          # "Since every run step is a new shell, environment variables are not shared across steps.
          # If you need an environment variable to be accessible in more than one step, export the value using BASH_ENV."
          # See: https://circleci.com/docs/set-environment-variable/#set-an-environment-variable-in-a-step
          command: |
            if [[ $(git diff --name-only HEAD^ HEAD packages/styles-page) ]]; then
              echo "Changes detected in the styles-page micro-frontend"
              echo "export STYLES_PAGE_CHANGED=true" >> $BASH_ENV
            else
              echo "No changes in styles-page micro-frontend"
              echo "export STYLES_PAGE_CHANGED=false" >> $BASH_ENV
            fi
      - run:
          name: Results
          command: |
            source $BASH_ENV
            echo Collections page: $COLLECTIONS_PAGE_CHANGED
            echo Styles page: $STYLES_PAGE_CHANGED
      - run: |
          cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - bash.env
  collections-page:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Load env variables
      - attach_workspace:
          at: .
      # - checkout
      - run: |
          cat bash.env >> $BASH_ENV
      # Install dependencies and build the "settings_page" package
      - run:
          name: Build "collections-page"
          command: |
            source $BASH_ENV
            if [ "$COLLECTIONS_PAGE_CHANGED" == "true" ]; then
              cd packages/collections-page
              npm install
              npm run build
            else
              echo "No changes in packages/collections-page, skipping build"
            fi
  styles-page:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Load env variables
      - attach_workspace:
          at: .
      # - checkout
      - run: |
          cat bash.env >> $BASH_ENV
      # Install dependencies and build the "settings_page" package
      - run:
          name: Build "styles-page"
          command: |
            source $BASH_ENV
            if [ "$STYLES_PAGE_CHANGED" == "true" ]; then
              cd packages/styles-page
              npm install
              npm run build
            else
              echo "No changes in packages/styles-page, skipping build"
            fi


# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  deploy-micro-frontends:
    jobs:
      # First we check for changes in the micro-frontends, and set environment variables accordingly
      - check-for-changes
      # Then we build the micro-frontends that have changed
      - collections-page:
          requires:
            - check-for-changes
      - styles-page:
          requires:
            - check-for-changes
